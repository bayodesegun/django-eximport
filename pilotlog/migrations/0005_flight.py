# Generated by Django 5.1.1 on 2024-09-12 20:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pilotlog', '0004_airfield'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('record_modified', models.DateTimeField(auto_now=True, help_text='Date and time of last modification to record', verbose_name='RecordModified')),
                ('flight_code', models.CharField(help_text='Unique identifier for this flight', max_length=36, primary_key=True, serialize=False, verbose_name='FlightCode')),
                ('arr_code', models.CharField(help_text='Code for the arrival airport', max_length=36, verbose_name='ArrCode')),
                ('arr_offset', models.IntegerField(help_text='Time offset for the arrival location', verbose_name='ArrOffset')),
                ('arr_rwy', models.CharField(blank=True, help_text='Arrival runway designation', max_length=255, verbose_name='ArrRwy')),
                ('arr_time_sched', models.IntegerField(help_text='Scheduled arrival time', verbose_name='ArrTimeSCHED')),
                ('arr_time_utc', models.IntegerField(help_text='Actual arrival time in UTC', verbose_name='ArrTimeUTC')),
                ('base_offset', models.IntegerField(help_text='Time offset for the base location', verbose_name='BaseOffset')),
                ('crew_list', models.TextField(blank=True, help_text='List of crew members on the flight', verbose_name='CrewList')),
                ('date_base', models.DateField(help_text='Date of the flight in the base time zone', verbose_name='DateBASE')),
                ('date_local', models.DateField(help_text='Date of the flight in the local time zone', verbose_name='DateLOCAL')),
                ('date_utc', models.DateField(help_text='Date of the flight in UTC', verbose_name='DateUTC')),
                ('de_ice', models.BooleanField(help_text='Indicates if de-icing was performed', verbose_name='DeIce')),
                ('dep_code', models.CharField(help_text='Code for the departure airport', max_length=36, verbose_name='DepCode')),
                ('dep_offset', models.IntegerField(help_text='Time offset for the departure location', verbose_name='DepOffset')),
                ('dep_rwy', models.CharField(blank=True, help_text='Departure runway designation', max_length=255, verbose_name='DepRwy')),
                ('dep_time_sched', models.IntegerField(help_text='Scheduled departure time', verbose_name='DepTimeSCHED')),
                ('dep_time_utc', models.IntegerField(help_text='Actual departure time in UTC', verbose_name='DepTimeUTC')),
                ('flight_number', models.CharField(blank=True, help_text='Flight number or designation', max_length=255, verbose_name='FlightNumber')),
                ('flight_search', models.CharField(help_text='Search key for the flight', max_length=255, verbose_name='FlightSearch')),
                ('fuel', models.FloatField(help_text='Amount of fuel on board', verbose_name='Fuel')),
                ('fuel_planned', models.FloatField(help_text='Planned amount of fuel for the flight', verbose_name='FuelPlanned')),
                ('fuel_used', models.FloatField(help_text='Amount of fuel used during the flight', verbose_name='FuelUsed')),
                ('hobbs_in', models.FloatField(help_text='Hobbs meter reading at the end of the flight', verbose_name='HobbsIn')),
                ('hobbs_out', models.FloatField(help_text='Hobbs meter reading at the start of the flight', verbose_name='HobbsOut')),
                ('holding', models.IntegerField(help_text='Time spent in holding patterns', verbose_name='Holding')),
                ('ldg_day', models.IntegerField(help_text='Number of day landings', verbose_name='LdgDay')),
                ('ldg_night', models.IntegerField(help_text='Number of night landings', verbose_name='LdgNight')),
                ('ldg_time_utc', models.IntegerField(help_text='Landing time in UTC', verbose_name='LdgTimeUTC')),
                ('lift_sw', models.IntegerField(help_text='Lift switch status', verbose_name='LiftSW')),
                ('next_page', models.BooleanField(help_text='Indicates if there is a next page in the log', verbose_name='NextPage')),
                ('next_summary', models.BooleanField(help_text='Indicates if there is a next summary', verbose_name='NextSummary')),
                ('p1_code', models.CharField(help_text='Code for the first pilot', max_length=36, verbose_name='P1Code')),
                ('p2_code', models.CharField(help_text='Code for the second pilot', max_length=36, verbose_name='P2Code')),
                ('p3_code', models.CharField(help_text='Code for the third pilot', max_length=36, verbose_name='P3Code')),
                ('p4_code', models.CharField(help_text='Code for the fourth pilot', max_length=36, verbose_name='P4Code')),
                ('pf', models.BooleanField(help_text='Indicates if the pilot was Pilot Flying', verbose_name='PF')),
                ('pairing', models.CharField(blank=True, help_text='Flight pairing information', max_length=255, verbose_name='Pairing')),
                ('pax', models.IntegerField(help_text='Number of passengers on board', verbose_name='Pax')),
                ('remarks', models.TextField(help_text='Additional remarks about the flight', verbose_name='Remarks')),
                ('report', models.TextField(blank=True, help_text='Flight report details', verbose_name='Report')),
                ('route', models.TextField(blank=True, help_text='Flight route information', verbose_name='Route')),
                ('sign_box', models.IntegerField(help_text='Signature box status', verbose_name='SignBox')),
                ('tag_approach', models.CharField(blank=True, help_text='Approach tag for the flight', max_length=255, verbose_name='TagApproach')),
                ('tag_delay', models.CharField(blank=True, help_text='Delay tag for the flight', max_length=255, verbose_name='TagDelay')),
                ('tag_launch', models.CharField(blank=True, help_text='Launch tag for the flight', max_length=255, verbose_name='TagLaunch')),
                ('tag_lesson', models.CharField(blank=True, help_text='Lesson tag for the flight', max_length=255, verbose_name='TagLesson')),
                ('tag_ops', models.CharField(blank=True, help_text='Operations tag for the flight', max_length=255, verbose_name='TagOps')),
                ('to_day', models.IntegerField(help_text='Number of day takeoffs', verbose_name='ToDay')),
                ('to_edit', models.BooleanField(help_text='Indicates if the entry is editable', verbose_name='ToEdit')),
                ('to_night', models.IntegerField(help_text='Number of night takeoffs', verbose_name='ToNight')),
                ('to_time_utc', models.IntegerField(help_text='Takeoff time in UTC', verbose_name='ToTimeUTC')),
                ('training', models.CharField(blank=True, help_text='Training information for the flight', max_length=255, verbose_name='Training')),
                ('user_bool', models.BooleanField(help_text='User-defined boolean field', verbose_name='UserBool')),
                ('user_num', models.IntegerField(help_text='User-defined numeric field', verbose_name='UserNum')),
                ('user_text', models.TextField(blank=True, help_text='User-defined text field', verbose_name='UserText')),
                ('min_air', models.IntegerField(help_text='Minimum air time in minutes', verbose_name='minAIR')),
                ('min_cop', models.IntegerField(help_text='Minimum co-pilot time in minutes', verbose_name='minCOP')),
                ('min_dual', models.IntegerField(help_text='Minimum dual instruction time in minutes', verbose_name='minDUAL')),
                ('min_exam', models.IntegerField(help_text='Minimum examination time in minutes', verbose_name='minEXAM')),
                ('min_ifr', models.IntegerField(help_text='Minimum IFR time in minutes', verbose_name='minIFR')),
                ('min_imt', models.IntegerField(help_text='Minimum instrument time in minutes', verbose_name='minIMT')),
                ('min_instr', models.IntegerField(help_text='Minimum instruction time in minutes', verbose_name='minINSTR')),
                ('min_night', models.IntegerField(help_text='Minimum night time in minutes', verbose_name='minNIGHT')),
                ('min_pic', models.IntegerField(help_text='Minimum Pilot-in-Command time in minutes', verbose_name='minPIC')),
                ('min_picus', models.IntegerField(help_text='Minimum Pilot-in-Command Under Supervision time in minutes', verbose_name='minPICUS')),
                ('min_rel', models.IntegerField(help_text='Minimum relief pilot time in minutes', verbose_name='minREL')),
                ('min_sfr', models.IntegerField(help_text='Minimum Special Flight Rules time in minutes', verbose_name='minSFR')),
                ('min_total', models.IntegerField(help_text='Total flight time in minutes', verbose_name='minTOTAL')),
                ('min_u1', models.IntegerField(help_text='User-defined time 1 in minutes', verbose_name='minU1')),
                ('min_u2', models.IntegerField(help_text='User-defined time 2 in minutes', verbose_name='minU2')),
                ('min_u3', models.IntegerField(help_text='User-defined time 3 in minutes', verbose_name='minU3')),
                ('min_u4', models.IntegerField(help_text='User-defined time 4 in minutes', verbose_name='minU4')),
                ('min_xc', models.IntegerField(help_text='Minimum cross-country time in minutes', verbose_name='minXC')),
                ('aircraft', models.ForeignKey(db_column='aircraft_code', help_text='Unique identifier for the aircraft used in this flight', on_delete=django.db.models.deletion.PROTECT, to='pilotlog.aircraft', verbose_name='Aircraft')),
            ],
            options={
                'verbose_name': 'Flight',
                'verbose_name_plural': 'Flights',
            },
        ),
    ]
